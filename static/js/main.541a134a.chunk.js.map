{"version":3,"sources":["components/ContactList/ContactList.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["ContactList","contacts","onDeleteContact","className","styles","TaskList","map","contact","TaskList_item","name","number","TaskList_button","type","onClick","id","Filter","value","onChange","ContactForm","state","handleChange","e","currentTarget","setState","handleSubmit","preventDefault","props","onSubmit","reset","TaskEditor","this","TaskEditor_label","TaskEditor_input","pattern","title","required","TaskEditor_button","Component","App","filter","formSubmitHandler","uuidv4","toLowerCase","includes","alert","prevState","deleteContact","contactId","changeFilter","filterContacts","filterNormalize","visibleContacts","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.541a134a.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={styles.TaskList}>\r\n    {contacts.map((contact) => (\r\n      <li className = {styles.TaskList_item}key={contact.id}>\r\n        {contact.name + \":\" + contact.number}\r\n        {\r\n          <button\r\n            className={styles.TaskList_button}\r\n            type=\"button\"\r\n            name=\"delte\"\r\n            onClick={() => onDeleteContact(contact.id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        }\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;","import PropTypes from 'prop-types';\r\n\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className=\"filter_label\">\r\n    Find contacts by name\r\n    <input\r\n      className=\"filter_input\"\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    ></input>\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"./ContactForm.module.css\";\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.TaskEditor} onSubmit={this.handleSubmit}>\r\n        <label className={styles.TaskEditor_label}>\r\n          Name\r\n          <input\r\n            className={styles.TaskEditor_input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n  title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n  required\r\n          />\r\n        </label>\r\n        <label className={styles.TaskEditor_label}>\r\n          Number\r\n          <input\r\n            className={styles.TaskEditor_input}\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n  title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n  required\r\n          />\r\n        </label>\r\n        <button className={styles.TaskEditor_button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n};\r\n\r\nexport default ContactForm;","import { Component } from 'react';\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\nimport ContactForm from \"./ContactForm/ContactForm\";\n\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  formSubmitHandler = ({ name, number }) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    const getName = this.state.contacts.map(contact =>\n      contact.name.toLowerCase(),\n    );\n\n    if (getName.includes(contact.name.toLowerCase())) {\n      alert(`${contact.name} is already in contacts`);\n    } else {\n      this.setState(prevState => ({\n        contacts: [contact, ...prevState.contacts],\n      }));\n    }\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  filterContacts = () => {\n    const { contacts, filter } = this.state;\n    const filterNormalize = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterNormalize),\n    );\n  };\n\n  render() {\n    const filter = this.state.filter;\n    const visibleContacts = this.filterContacts();\n    return (\n      <div>\n        <h1 className=\"main_title\">Phonebook</h1>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n        <h2 className=\"contacts_title\">Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <>\r\n    <App />\r\n  </>,\r\n  document.getElementById(\"root\")\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskEditor\":\"ContactForm_TaskEditor__3ncgI\",\"TaskEditor_label\":\"ContactForm_TaskEditor_label__-546o\",\"TaskEditor_input\":\"ContactForm_TaskEditor_input__1IjME\",\"TaskEditorinput\":\"ContactForm_TaskEditorinput__1VZds\",\"TaskEditor_button\":\"ContactForm_TaskEditor_button__35kQg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskList\":\"ContactList_TaskList__3_7kD\",\"TaskList_item\":\"ContactList_TaskList_item__3ExnL\",\"completed\":\"ContactList_completed__3YUFR\",\"TaskList_text\":\"ContactList_TaskList_text__3V8QR\",\"TaskList_actions\":\"ContactList_TaskList_actions__LF71K\",\"TaskList_button\":\"ContactList_TaskList_button__31Flu\"};"],"sourceRoot":""}